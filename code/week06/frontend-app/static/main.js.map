{"version":3,"sources":["./src/app/service/integration.service.ts","./src/app/service/state.service.ts","./src/environments/environment.ts","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/app/service/sort.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,MAAM,QAAQ,GAAG,MAAM,CAAC;AAIjB,MAAM,kBAAkB;IAE7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAGxC,WAAW;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,GAAG,QAAQ,UAAU,CAAC;IAC7D,CAAC;IACM,SAAS,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,GAAG,QAAQ,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChE,CAAC;IAEM,aAAa,CAAC,EAAU,EAAE,SAAwB;QACvD,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,GAAG,QAAQ,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC;IAEM,QAAQ,CAAC,EAAU;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,GAAG,QAAQ,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAEM,GAAG,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAO,GAAG,QAAQ,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC;IAClE,CAAC;;oFAtBU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACG;;;AAO9C,MAAM,YAAY;IAIvB,YAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAH1D,aAAQ,GAAsB,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;QACnD,aAAQ,GAAqB,IAAI,kDAAa,CAAC,CAAC,CAAC,CAAC;IAEW,CAAC;IAEvD,WAAW;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAiB,EAAE,EAAE;YACpE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAGM,YAAY,CAAC,QAAgB;QAClC,IAAI,CAAC,kBAAkB;aACpB,SAAS,CAAC,QAAQ,CAAC;aACnB,IAAI,CAAC,qEAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EACnC,0DAAG,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAqB,EAAE,EAAE;YAC5C,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC;QACtF,CAAC,CAAC,CAAC;aACF,SAAS,CAAC,CAAC,OAAiB,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,GAAG,CAAC,QAAgB;QACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QAClD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACM,QAAQ,CAAC,QAAgB;QAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,cAAc,CAAC,QAAgB,EAAE,KAAa;QACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAC,gBAAgB,EAAE,KAAK,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QACvF,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;;wEAxCU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQuB;;;;;;;;;ICJrB,2EACE;IAAA,oEAAG;IAAA,uDAAgC;IAAA,4DAAI;IACvC,oEAAG;IAAA,uDAA2C;IAAA,4DAAI;IAClD,oEAAG;IAAA,uDAAqC;;IAAA,4DAAI;IAC9C,4DAAW;;;IAHN,0DAAgC;IAAhC,uGAAgC;IAChC,0DAA2C;IAA3C,kHAA2C;IAC3C,0DAAqC;IAArC,oKAAqC;;;IAGxC,2EACE;IAAA,oEAAG;IAAA,yEAAc;IAAA,4DAAI;IACrB,oEAAG;IAAA,uDAAqC;;IAAA,4DAAI;IAC9C,4DAAW;;;IADN,0DAAqC;IAArC,oKAAqC;;;IAT9C,sEACE;IAAA,2HAIW;IACX,6MAKc;IAChB,4DAAM;;;;IAXO,0DAAuB;IAAvB,oFAAuB;;;;IAmB9B,6EAME;IAFA,yYAAkC;IAElC,kEACF;IAAA,4DAAS;;ADZR,MAAM,eAAe;IAE1B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAD7B,WAAM,GAAW,EAAE,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;IACpB,CAAC;IAGlD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAErD,CAAC;IAED,GAAG;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAEhD,CAAC;IAED,KAAK,CAAC,KAAa;QACjB,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAElE,CAAC;;8EAlBU,eAAe;+FAAf,eAAe;QClB5B,8EACE;QAAA,qEAAI;QAAA,uDAA8B;QAAA,4DAAK;QACzC,4DAAW;QACX,2GAYM;QACN,8EACI;QAAA,4EAAgD;QAArB,uIAAS,cAAU,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QACjE,4EAA2C;QAAhB,uIAAS,SAAK,IAAC;QAAC,8DAAG;QAAA,4DAAS;QACvD,gEACA;QAAA,qFACE;QAAA,6EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,0EACA;QAAA,mHAOS;QACX,4DAAiB;QACrB,4DAAW;;;QA/BL,0DAA8B;QAA9B,sGAA8B;QAEb,0DAAgB;QAAhB,sFAAgB;QAqB9B,2DAAsB;QAAtB,2EAAsB;;6FDNlB,eAAe;cAN3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;gBACrC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;mHAEkB,MAAM;kBAAtB,mDAAK;mBAAC,QAAQ;;;;;;;;;;;;;;AEnBjB;AAAA;AAAA;AAAoD;;AAM7C,MAAM,QAAQ;IAEnB,SAAS,CAAC,OAAwB;QAClC,IAAG,CAAC,OAAO,EAAC;YACV,OAAO,EAAE,CAAC;SACX;QACD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAS,EAAE,CAAS,EAAE,EAAE;YAEpD,IAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAC;gBACtB,OAAO,CAAC,CAAC,CAAC;aACX;iBAAM,IAAG,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAC;gBAC7B,OAAO,CAAC,CAAC;aACV;YACD,OAAO,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,UAAU;QACtC,CAAC,CAAC,CAAC;IAEL,CAAC;;gEAhBY,QAAQ;kGAAR,QAAQ;6FAAR,QAAQ;cAHpB,kDAAI;eAAC;gBACJ,IAAI,EAAE,MAAM;aACb;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AACb;;;;;;;;;ICG9D,2EAIE;IAAA,2EAA2C;IAC7C,4DAAW;;;IAHT,oFAAgC;IAEpB,0DAAiB;IAAjB,6EAAiB;;ADIxB,MAAM,YAAY;IAIvB,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAH9C,aAAQ,GAAyB,+CAAE,EAAE,CAAC;QACtC,aAAQ,GAAwB,+CAAE,EAAE,CAAC;IAIrC,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;IAE5C,CAAC;IAED,iBAAiB,CAAC,KAAa,EAAE,MAAc;QAC7C,OAAO,MAAM,CAAC,UAAU,CAAC;IAC3B,CAAC;;wEAjBU,YAAY;4FAAZ,YAAY;QCZzB,iFAGoB;QACpB,kHAKW;;;;QAJU,0DAA4B;QAA5B,mNAA4B;;6FDOpC,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,eAAe,EAAE,qEAAuB,CAAC,MAAM;aAChD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgC;AACxB;AACO;AACP;AACC;AACD;AACF;AACe;AAER;AACb;;AAyBxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAbJ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,qEAAgB;YAChB,6EAAiB;YACjB,oEAAa;YACb,wEAAe;YACf,sEAAc;YACd,qEAAa;YACb,oFAAoB;SAErB;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,yEAAe;QACf,4DAAQ,aAGR,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,qEAAgB;QAChB,6EAAiB;QACjB,oEAAa;QACb,wEAAe;QACf,sEAAc;QACd,qEAAa;QACb,oFAAoB;6FAMX,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yEAAe;oBACf,4DAAQ;iBACT;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,qEAAgB;oBAChB,6EAAiB;oBACjB,oEAAa;oBACb,wEAAe;oBACf,sEAAc;oBACd,qEAAa;oBACb,oFAAoB;iBAErB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoveLaceOffer, Wallet, WalletMap } from '../model/model';\n\nconst API_ROOT = '/api';\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegrationService {\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public readWallets(): Observable<Wallet[]> {\n    return this.httpClient.get<Wallet[]>(`${API_ROOT}/wallets`)\n  }\n  public readFunds(id: string): Observable<Wallet> {\n    return this.httpClient.get<Wallet>(`${API_ROOT}/${id}/funds`);\n  }\n\n  public offerLovelace(id: string, lovelaces: LoveLaceOffer): Observable<void> {\n    return this.httpClient.post<void>(`${API_ROOT}/${id}/offer`, lovelaces);\n  }\n\n  public retreive(id: string): Observable<void> {\n    return this.httpClient.post<void>(`${API_ROOT}/${id}/retrieve`, null);\n  }\n\n  public use(id: string): Observable<void> {\n    return this.httpClient.post<void>(`${API_ROOT}/${id}/use`, null)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of, ReplaySubject, Subject } from 'rxjs';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { Wallet } from '../model/model';\nimport { IntegrationService } from './integration.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StateService {\n  wallets$: Subject<Wallet[]> = new ReplaySubject(1);\n  loading$: Subject<boolean> = new ReplaySubject(1);\n\n  constructor(private integrationService: IntegrationService) {}\n\n  public readWallets(): void {\n    this.loading$.next(true);\n    this.integrationService.readWallets().subscribe((wallets: Wallet[]) => {\n      this.wallets$.next(wallets);\n      this.loading$.next(false);\n    });\n  }\n\n\n  public updateWallet(walletId: string): void {\n    this.integrationService\n      .readFunds(walletId)\n      .pipe(withLatestFrom(this.wallets$),\n      map(([wallet, wallets]: [Wallet, Wallet[]]) => {\n        return [...wallets.filter((w: Wallet) => w.walletName != wallet.walletName), wallet]\n      }))\n      .subscribe((wallets: Wallet[]) => this.wallets$.next(wallets));\n  }\n\n  public use(walletId: string): void {\n    this.loading$.next(true);\n    this.integrationService.use(walletId).subscribe();\n    this.readWallets();\n  }\n  public retrieve(walletId: string): void {\n    this.loading$.next(true);\n    this.integrationService.retreive(walletId).subscribe();\n    this.readWallets();\n  }\n\n  public offerLovelaces(walletId: string, offer: number): void {\n    this.loading$.next(true);\n    this.integrationService.offerLovelace(walletId, {offeredLovelaces: offer}).subscribe();\n    this.readWallets();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { Wallet } from '../model/model';\nimport { StateService } from '../service/state.service';\n\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.component.html',\n  styleUrls: ['./wallet.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WalletComponent {\n  @Input('wallet') wallet: Wallet = { walletName: '', walletUuid: '' };\n  constructor(private stateService: StateService) {}\n\n\n  retrieve(): void {\n    this.stateService.retrieve(this.wallet.walletName);\n  \n  }\n\n  use(): void {\n    this.stateService.use(this.wallet.walletName);\n\n  }\n\n  offer(value: number): void{\n    this.stateService.offerLovelaces(this.wallet.walletName, value);\n    \n  }\n}\n","<mat-card class=\"header\">\n  <h2>Wallet {{ wallet.walletName }}</h2>\n</mat-card>\n<div *ngFor=\"let token of wallet.tokens\">\n  <mat-card *ngIf=\"token.tokenName; else adaValue\">\n    <p>TokenName: {{ token.tokenName }}</p>\n    <p>Currency Symbol: {{ token.currencySymbol }}</p>\n    <p>Ammount: {{ token.ammount | number }}</p>\n  </mat-card>\n  <ng-template #adaValue>\n    <mat-card>\n      <p>ADA (Lovelace)</p>\n      <p>Ammount: {{ token.ammount | number }}</p>\n    </mat-card>\n  </ng-template>\n</div>\n<mat-card class=\"form\">\n    <button mat-stroked-button (click)=\"retrieve()\">Retrieve</button>\n    <button mat-stroked-button (click)=\"use()\">Use</button>\n    <br />\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Offer Lovelaces</mat-label>\n      <input autocomplete=\"off\" matInput type=\"number\" #offerInput />\n      <button\n        *ngIf=\"offerInput.value\"\n        matSuffix\n        mat-stroked-button\n        (click)=\"offer(+offerInput.value)\"\n      >\n        Offer\n      </button>\n    </mat-form-field>\n</mat-card>\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Wallet } from '../model/model';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(wallets: Wallet[] | null): Wallet[] {\n  if(!wallets){\n    return [];\n  }\n  return wallets.slice(0).sort((a: Wallet, b: Wallet) => {\n    \n    if(isNaN(+a.walletName)){\n      return -1;\n    } else if(isNaN(+b.walletName)){\n      return 1;\n    }\n    return +a.walletName - +b.walletName\n  });\n\n}\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\nimport { Wallet } from './model/model';\nimport { IntegrationService } from './service/integration.service';\nimport { StateService } from './service/state.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit {\n  wallets$: Observable<Wallet[]> = of();\n  loading$: Observable<boolean> = of();\n\n  constructor(private stateService: StateService){\n\n  }\n\n  ngOnInit() : void {\n   this.stateService.readWallets();\n   this.wallets$ = this.stateService.wallets$;\n   this.loading$ = this.stateService.loading$;\n\n  }\n\n  trackByWalletName(index: number, wallet: Wallet): string {\n    return wallet.walletName;\n  }\n  \n}\n","<mat-progress-bar\n  mode=\"indeterminate\"\n  hidden=\"loading$ | async\"\n></mat-progress-bar>\n<mat-card\n  *ngFor=\"let wallet of wallets$ | async | sort; trackBy: trackByWalletName\"\n  [style.background]=\"'lightblue'\"\n>\n  <app-wallet [wallet]=\"wallet\"></app-wallet>\n</mat-card>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule} from '@angular/common/http';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button'\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { WalletComponent } from './wallet/wallet.component';\nimport { SortPipe } from './service/sort.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WalletComponent,\n    SortPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatProgressBarModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
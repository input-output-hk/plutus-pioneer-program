-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package cardano-streaming
@version 1.1.0.0

module Cardano.Streaming

-- | <a>withChainSyncEventStream</a> uses the chain-sync mini-protocol to
--   connect to a locally running node and fetch blocks from the given
--   starting point.
withChainSyncEventStream :: FilePath -> NetworkId -> [ChainPoint] -> (Stream (Of (ChainSyncEvent (BlockInMode CardanoMode))) IO r -> IO b) -> IO b
data ChainSyncEvent a
RollForward :: a -> ChainTip -> ChainSyncEvent a
RollBackward :: ChainPoint -> ChainTip -> ChainSyncEvent a
data ChainSyncEventException
NoIntersectionFound :: ChainSyncEventException
instance GHC.Generics.Generic (Cardano.Streaming.ChainSyncEvent a)
instance GHC.Base.Functor Cardano.Streaming.ChainSyncEvent
instance GHC.Show.Show a => GHC.Show.Show (Cardano.Streaming.ChainSyncEvent a)
instance GHC.Show.Show Cardano.Streaming.ChainSyncEventException
instance GHC.Exception.Type.Exception Cardano.Streaming.ChainSyncEventException
